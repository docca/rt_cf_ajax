%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2009 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<%ARGS>
$i => undef
@Format => undef
$record => undef
$maxitems => undef
$Depth => undef
$Warning => undef
$ColumnMap => {}
$Class     => 'RT__Ticket'
$Classes => ''
</%ARGS>
<%init>
my @showCustomfieldArray;
my @basicArray;
my $TicketId;
$m->out(  '<tr class="' . $Classes . ' '
        . ( $Warning ? 'warnline' : $i % 2 ? 'oddline' : 'evenline' ) . '" >'
        . "\n" );
use HTML::Entities;
my $item;
foreach my $column (@Format) {
    if ( defined $column->{title} && $column->{title} eq 'NEWLINE' ) {
        while ( $item < $maxitems ) {
            $m->out(qq{<td class="collection-as-table">&nbsp;</td>\n});
            $item++;
        }
        $item = 0;
        $m->out( '</tr>' . "\n" );
        $m->out(  '<tr class="'
                . ( $Warning ? 'warnline' : $i % 2 ? 'oddline' : 'evenline' )
                . '" >'
                . "\n" );
        next;
    }

    my $class = $column->{class} ? encode_entities( $column->{class}, q{'"&<>} ) : 'collection-as-table';
    $m->out(qq{<td class="$class" });

    my %attrs;
    foreach my $attr (qw(style align)) {
        if ( defined $column->{ $attr } ) {
            $attrs{ $attr } = $column->{ $attr };
            next;
        }

        # if it's not defined then use column map
        my $col = $column->{'attribute'} || $column->{'last_attribute'};
        unless ( exists $ColumnMap->{$col}{$attr} ) {
            next unless $col;

            $ColumnMap->{$col}{$attr} = $m->comp(
                "/Elements/ColumnMap",
                Class => $Class,
                Name  => $col,
                Attr  => $attr,
            );
        }
        $attrs{ $attr } = ProcessColumnMapValue(
            $ColumnMap->{$col}{$attr},
            Arguments => [$record, $i],
            Escape => 0,
        );
    }

    $attrs{colspan} = $column->{span};
    $item += ($attrs{'colspan'} || 1);

    my @out;
    my $subject = 0;
    my $owner = 0;
    my $queue = 0;
    my $customfielddisc = '';
    my $customfieldId = 0;
    foreach my $subcol ( @{ $column->{output} } ) {
        my ($col) = ($subcol =~ /^__(.*?)__$/);
        unless ( $col ) {
            push @out, $subcol;
            next;
        }

        unless ( exists $ColumnMap->{$col}{'value'} ) {
            $ColumnMap->{$col}{'value'} = $m->comp(
                "/Elements/ColumnMap",
                Class => $Class,
                Name  => $col,
                Attr  => 'value'
            );
        }

        my $outValue = ProcessColumnMapValue(
            $ColumnMap->{$col}{'value'},
            Arguments => [$record, $i],
        );

	if ($col =~ /^(Subject|OwnerName|QueueName)/){
	    $TicketId = $record->Id;
	    $subject = 1 if ($col =~ /^Subject/);
	    $owner = 1 if ($col =~ /^OwnerName/);
	    $queue = 1 if ($col =~ /^QueueName/);
	}
	
	if ( $col =~ /^CustomField\.\{(.+)\}$/){
	    my $cf = RT::CustomField->new($RT::SystemUser);
	    $cf->Load($1);
    
	    if ($cf && $cf->Id && $session{'CurrentUser'}->HasRight(Object => $cf,Right  => 'ModifyCustomField') && RT->Config->Get('EditSearchRows', $session{'CurrentUser'})){
		$customfieldId = $cf->Id;
		$customfielddisc = $cf->Description;
	    
		push @showCustomfieldArray, 'Edit-'.$cf->Id.'-'.$record->Id;
	    }
	    if ($cf->Description =~ /;#Hidden$/){
		$outValue = '<div id="showValue-'.$cf->Id.'-'.$record->Id.'"><label id="viewCfValue-'.$cf->id.'-'.$record->Id.'" onclick="viewCfValue('.$cf->Id.', '.$record->Id.', \''.$session{"CurrentUser"}->Name.'\', '.$session{"CurrentUser"}->Id.', '.RT->Config->Get("CfHiddenTime").', 1)" style="cursor:pointer;"><i>'.loc('View').'</i></label></div>';
	    }
	    
	}
	
	push @out, $outValue;
    }
    s/\n/<br \/>/gs for @out;

    $m->out( $_ .'="'. $m->interp->apply_escapes( $attrs{$_} => 'h' ) .'"' )
        foreach grep $attrs{$_}, ( qw(align style colspan) );

    $m->out('>');
    if ($Class eq 'RT__Ticket' && $customfielddisc !~ /;#Hidden$/){
	$m->out('<table><tr><td><div id="Subject-TicketId-'.$record->Id.'">') if ($subject && $record->CurrentUserHasRight('ModifyTicket') && RT->Config->Get('EditSearchRows', $session{'CurrentUser'}));
	$m->out('<table><tr><td><div id="Owner-TicketId-'.$record->Id.'">') if ($owner && $record->CurrentUserHasRight('ModifyTicket') && RT->Config->Get('EditSearchRows', $session{'CurrentUser'}));
	$m->out('<table><tr><td><div id="Queue-TicketId-'.$record->Id.'">') if ($queue && $record->CurrentUserHasRight('ModifyTicket') && RT->Config->Get('EditSearchRows', $session{'CurrentUser'}));
    }
    $m->out('<table><tr><td><div id="ShowCfs-'.$customfieldId.'-TicketId-'.$record->Id.'">') if ($customfieldId && $Class eq 'RT__Ticket' && $customfielddisc !~ /;#Hidden$/);
    $m->out(@out) if @out;

    $m->out('</div><div id="EditCfs-'.$customfieldId.'-TicketId-'.$record->Id.'" style="display:none"></div></td><td><span id="Edit-'.$customfieldId.'-'.$record->Id.'" style="right:0px;cursor:pointer;width:10px;hegith:10px;"><img src="'.RT->Config->Get('WebPath').'/NoAuth/images/pencil-icon.png" ></span></td></tr></table>') if ($customfieldId && $Class eq 'RT__Ticket' && $customfielddisc !~ /;#Hidden$/);
    if (RT->Config->Get('EditSearchRows', $session{'CurrentUser'}) && $subject && $Class eq 'RT__Ticket' && $customfielddisc !~ /;#Hidden$/){
       if ($record->CurrentUserHasRight('ModifyTicket')){
	    $m->out('</div><div id="EditSubject-TicketId-'.$record->Id.'" style="display:none"><input type="text" id="InputSubject-'.$record->Id.'" value="'.$record->Subject.'" size="60"></div>');
	    $m->out('</td><td><span id="EditSubject-'.$record->Id.'" style="right:0px;cursor:pointer;width:10px;hegith:10px;"><img src="'.RT->Config->Get('WebPath').'/NoAuth/images/pencil-icon.png" ></span></td></tr></table>');
	    push @basicArray, "Subject";
	}
    }elsif (RT->Config->Get('EditSearchRows', $session{'CurrentUser'}) && $owner && $Class eq 'RT__Ticket'){
       if ($record->CurrentUserHasRight('ModifyTicket')){
	    $m->out('</div><div id="EditOwner-TicketId-'.$record->Id.'" style="display:none"><input type="text" name="InputOwner" id="InputOwner-'.$record->Id.'" value="'.($record->OwnerObj->RealName?$record->OwnerObj->RealName:$record->OwnerObj->Name).'"></div>');
	    $m->out('</td><td><span id="EditOwner-'.$record->Id.'" style="right:0px;cursor:pointer;width:10px;hegith:10px;"><img src="'.RT->Config->Get('WebPath').'/NoAuth/images/pencil-icon.png" ></span></td></tr></table>');
	    push @basicArray, "Owner";
	}
    }elsif (RT->Config->Get('EditSearchRows', $session{'CurrentUser'})  && $queue && $Class eq 'RT__Ticket'){
	if ($record->CurrentUserHasRight('ModifyTicket')){
	    $m->out('</div><div id="EditQueue-TicketId-'.$record->Id.'" style="display:none"><input type="text" name="InputQueue" id="InputQueue-'.$record->Id.'" value="'.($record->QueueObj->Name).'"></div>');
	    $m->out('</td><td><span id="EditQueue-'.$record->Id.'" style="right:0px;cursor:pointer;width:10px;hegith:10px;"><img src="'.RT->Config->Get('WebPath').'/NoAuth/images/pencil-icon.png" ></span></td></tr></table>');
	    push @basicArray, "Queue";
	}
    }
    $m->out( '</td>' . "\n" );
}
$m->out('</tr>');
</%init>
% if (RT->Config->Get('EditSearchRows', $session{'CurrentUser'})){
% if (@showCustomfieldArray){
<input type="hidden" Name="hiddenValue" class="hiddenValue" value="" >
<input type="hidden" Name="hiddenAutocomplete" class="hiddenAutocomplete" value="0" >
<input type="hidden" Name="hiddenCombobox" class="hiddenCombobox" value="0" >
% }
<script>
var modify = 1;
</script>
% for(my $i = 0; $i < @showCustomfieldArray; $i++){
<script>

jQuery("th.collection-as-table:last").css("width", "100px");
% my ($localCfId, $localTicketId) = $showCustomfieldArray[$i] =~ /Edit\-(\d+)\-(\d+)/;
jQuery("#<%$showCustomfieldArray[$i]%>").click(function(){
    var CfId = ("<%$showCustomfieldArray[$i]%>").replace(/Edit\-(\d+)\-(\d+)$/, "$1");
    var TicketId = ("<%$showCustomfieldArray[$i]%>").replace(/Edit\-(\d+)\-(\d+)$/, "$2");

    jQuery(this).hide();
    jQuery("#ShowCfs-"+CfId+"-TicketId-"+TicketId).hide();
    jQuery("#EditCfs-"+CfId+"-TicketId-"+TicketId).show();
    jQuery("#EditCfs-"+CfId+"-TicketId-"+TicketId).load('<%RT->Config->Get('WebPath')%>/Elements/CollectionAsTable/RowLoad',{'Cf': CfId, 'Ticket': TicketId}, function(){jQuery(this).children().focus();});

%   my $cf = RT::CustomField->new($RT::SystemUser);
%   $cf->Load($localCfId);
%   if ($cf && $cf->Type eq "Autocomplete"){
        jQuery(".hiddenAutocomplete").val(1);
%   }
});

jQuery(".combo-button").click(function(){
    jQuery(".hiddenCombobox").val(1);
});

jQuery("#EditCfs-<%$localCfId%>-TicketId-<%$localTicketId%>").focusout(function(){
  if (modify){
    var CfId = ("<%$showCustomfieldArray[$i]%>").replace(/Edit\-(\d+)\-(\d+)$/, "$1");
    var TicketId = ("<%$showCustomfieldArray[$i]%>").replace(/Edit\-(\d+)\-(\d+)$/, "$2");

    var strdate = "";
    //var value = jQuery(".CF-"+CfId+"-Edit").val();
    if (jQuery("#ui-datepicker-div").css('display')){
	strdate = jQuery("#ui-datepicker-div").css('display');
    }

    if (strdate.toString() == "block"){
	setTimeout(function() {jQuery(".CF-<%$localCfId%>-Edit-<%$localTicketId%>.hasDatepicker").focus();}, 0);
    }else if (jQuery(".hiddenAutocomplete").val() == 1){
//	console.log("ELSE IF AUTOCOMPLETE");
	setTimeout(function() {jQuery(".CF-<%$localCfId%>-Edit-<%$localTicketId%>.hasDatepicker").focus();}, 0);
	jQuery(".hiddenAutocomplete").val(0);
    }else if (jQuery(".hiddenCombobox").val() == 1){
      jQuery(".hiddenCombobox").val(0);
    }else if (strdate.toString() == "none" || strdate.toString() == ""){
%   	my $cf1 = RT::CustomField->new($RT::SystemUser);
%   	$cf1->Load($localCfId);
%       if ($cf1 && $cf1->Type ne "Combobox"){
            if (jQuery(".CF-<%$localCfId%>-Edit").val() != "")
//                value = jQuery(".CF-<%$localCfId%>-Edit").val();
		    value = jQuery(this).children(".CF-<%$localCfId%>-Edit-<%$localTicketId%>").val();
%       }else{
            if (jQuery("#Ticket-<%$localCfId%>-Value").val())
//                value = jQuery("#Ticket-<%$localCfId%>-Value-<%$localTicketId%>").val();
		value = jQuery(this).children("#Ticket-<%$localCfId%>-Value-<%$localTicketId%>").val();
%       }

	var array = 0;
	if (/Array/.test(value.constructor)){
	    array = 1;
	    var string = "";
	    for (var i = 0; i < value.length;i++){
	        if (value[i].length > 0){
		    if (string == ""){
			string = "#" + value[i];
		    }else{
			string = string + "#" + value[i];
		    }
		}
	    }
	    value = string;
	}
	jQuery.ajax({
	    type: 'POST',
	    url: '<%RT->Config->Get('WebPath')%>/Elements/AjaxEditCustomField',
	    data: {
		'CustomFieldId' : CfId,
		'Value' : value,
		'TicketId' : TicketId,
		'Array' : array,
	    },
	    success:function(data){
		if (/^OK.*/.test([data].toString())){
		    jQuery("#ShowCfs-"+CfId+"-TicketId-"+TicketId).load('<%RT->Config->Get('WebPath')%>/Elements/ShowCustomFieldUpdate',{'CustomFieldId': CfId, 'TicketId': TicketId});
		}else{
		    jQuery(this).children(".CF-<%$localCfId%>-Edit-<%$localTicketId%>").val("");
		    var str = [data].toString().replace(/\<\/div\>/,'');
		    if (str != ''){
			alert(str);
		    }
	        }
	    }
	});	
	jQuery(this).hide();
	jQuery("#<%$showCustomfieldArray[$i]%>").show();
	jQuery("#ShowCfs-"+CfId+"-TicketId-"+TicketId).show();
    }
  }else{
    modify = 1;
  }
});

jQuery("#EditCfs-<%$localCfId%>-TicketId-<%$localTicketId%>").keydown(function(e){
    if (e.keyCode == 27 ){
	modify = 0;
	jQuery(this).hide();
	jQuery("#<%$showCustomfieldArray[$i]%>").show();
	jQuery("#ShowCfs-"+CfId+"-TicketId-"+TicketId).show();
    }
});
</script>
% }
%  for (my $i = 0; $i < @basicArray; $i++){
<script>
    
    jQuery("#Edit<%$basicArray[$i]%>-<%$TicketId%>").click(function(){
	jQuery("#<%$basicArray[$i]%>-TicketId-<%$TicketId%>").hide();
	jQuery(this).hide();
	jQuery("#Edit<%$basicArray[$i]%>-TicketId-<%$TicketId%>").show();
	jQuery("#Input<%$basicArray[$i]%>-<%$TicketId%>").focus();
    });

    jQuery("#Input<%$basicArray[$i]%>-<%$TicketId%>").focusout(function(){
      if (modify){
	var value = jQuery(this).val();
	jQuery.ajax({
	    type: 'POST',
	    url: '<%RT->Config->Get('WebPath')%>/Elements/AjaxEditTicketBasic',
	    data: {
		'Value' : value,
		'TicketId' : '<%$TicketId%>',
		'Field' : '<%$basicArray[$i]%>',
	    },
	    success:function(data){
		if (/^OK.*/.test([data].toString())){
		    if ('<%$basicArray[$i]%>' == 'Subject'){
			jQuery("#<%$basicArray[$i]%>-TicketId-<%$TicketId%>").html('<a href=\"<%RT->Config->Get('WebPath')%>/Ticket/Display.html?id=<%$TicketId%>\">'+value+'</a>');
		    }else if ('<%$basicArray[$i]%>' == 'Owner'){
			jQuery("#<%$basicArray[$i]%>-TicketId-<%$TicketId%>").html('<a href=\"<%RT->Config->Get('WebPath')%>/Search/Simple.html?q='+value+'\">'+value+'</a>');
		    }else if ('<%$basicArray[$i]%>' == 'Queue'){
			jQuery("#<%$basicArray[$i]%>-TicketId-<%$TicketId%>").html('<a href=\"<%RT->Config->Get('WebPath')%>/Search/Simple.html?q=\''+value+'\'\">'+value+'</a>');
		    }
		}else{
		    jQuery(this).val("");
		    var str = [data].toString().replace(/\<\/div\>/,'');
		    if (str.length > 1){
			alert(str);
		    }
	        }
	    }
	});
	
	jQuery("#Edit<%$basicArray[$i]%>-TicketId-<%$TicketId%>").hide();
	jQuery("#Edit<%$basicArray[$i]%>-<%$TicketId%>").show();
	jQuery("#<%$basicArray[$i]%>-TicketId-<%$TicketId%>").show();
     }else{
        modify = 1;
     }
    });
    
    jQuery("#Input<%$basicArray[$i]%>-<%$TicketId%>").keydown(function(e){
	if (e.keyCode == 27 ){
	    modify = 0;
	    jQuery("#Edit<%$basicArray[$i]%>-TicketId-<%$TicketId%>").hide();
	    jQuery("#Edit<%$basicArray[$i]%>-<%$TicketId%>").show();
	    jQuery("#<%$basicArray[$i]%>-TicketId-<%$TicketId%>").show();
	}
    });
</script>
%  }
% }
